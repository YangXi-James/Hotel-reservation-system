<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.StandardMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot.common.domain.Standard">
    <id column="standard_id" jdbcType="INTEGER" property="standardId" />
    <result column="area" jdbcType="REAL" property="area" />
    <result column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="storey" jdbcType="INTEGER" property="storey" />
    <result column="weaher_hotwater" jdbcType="BIT" property="weaherHotwater" />
    <result column="weather_wifi" jdbcType="BIT" property="weatherWifi" />
    <result column="roomphoto_url" jdbcType="CHAR" property="roomphotoUrl" />
    <result column="bed" jdbcType="CHAR" property="bed" />
    <result column="room_number" jdbcType="INTEGER" property="roomNumber" />
    <result column="weaher_cancel" jdbcType="BIT" property="weaherCancel" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="breakfast" jdbcType="INTEGER" property="breakfast" />
    <result column="equipment" jdbcType="CHAR" property="equipment" />
    <result column="hotel_id" jdbcType="INTEGER" property="hotelId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    standard_id, area, room_id, storey, weaher_hotwater, weather_wifi, roomphoto_url, 
    bed, room_number, weaher_cancel, price, breakfast, equipment, hotel_id
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot.common.domain.StandardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from standard
    where standard_id = #{standardId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from standard
    where standard_id = #{standardId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.common.domain.StandardExample">
    delete from standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.common.domain.Standard">
    insert into standard (standard_id, area, room_id, 
      storey, weaher_hotwater, weather_wifi, 
      roomphoto_url, bed, room_number, 
      weaher_cancel, price, breakfast, 
      equipment, hotel_id)
    values (#{standardId,jdbcType=INTEGER}, #{area,jdbcType=REAL}, #{roomId,jdbcType=INTEGER}, 
      #{storey,jdbcType=INTEGER}, #{weaherHotwater,jdbcType=BIT}, #{weatherWifi,jdbcType=BIT}, 
      #{roomphotoUrl,jdbcType=CHAR}, #{bed,jdbcType=CHAR}, #{roomNumber,jdbcType=INTEGER}, 
      #{weaherCancel,jdbcType=BIT}, #{price,jdbcType=DECIMAL}, #{breakfast,jdbcType=INTEGER}, 
      #{equipment,jdbcType=CHAR}, #{hotelId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.common.domain.Standard">
    insert into standard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="standardId != null">
        standard_id,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="storey != null">
        storey,
      </if>
      <if test="weaherHotwater != null">
        weaher_hotwater,
      </if>
      <if test="weatherWifi != null">
        weather_wifi,
      </if>
      <if test="roomphotoUrl != null">
        roomphoto_url,
      </if>
      <if test="bed != null">
        bed,
      </if>
      <if test="roomNumber != null">
        room_number,
      </if>
      <if test="weaherCancel != null">
        weaher_cancel,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="breakfast != null">
        breakfast,
      </if>
      <if test="equipment != null">
        equipment,
      </if>
      <if test="hotelId != null">
        hotel_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="standardId != null">
        #{standardId,jdbcType=INTEGER},
      </if>
      <if test="area != null">
        #{area,jdbcType=REAL},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="storey != null">
        #{storey,jdbcType=INTEGER},
      </if>
      <if test="weaherHotwater != null">
        #{weaherHotwater,jdbcType=BIT},
      </if>
      <if test="weatherWifi != null">
        #{weatherWifi,jdbcType=BIT},
      </if>
      <if test="roomphotoUrl != null">
        #{roomphotoUrl,jdbcType=CHAR},
      </if>
      <if test="bed != null">
        #{bed,jdbcType=CHAR},
      </if>
      <if test="roomNumber != null">
        #{roomNumber,jdbcType=INTEGER},
      </if>
      <if test="weaherCancel != null">
        #{weaherCancel,jdbcType=BIT},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="breakfast != null">
        #{breakfast,jdbcType=INTEGER},
      </if>
      <if test="equipment != null">
        #{equipment,jdbcType=CHAR},
      </if>
      <if test="hotelId != null">
        #{hotelId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.common.domain.StandardExample" resultType="java.lang.Long">
    select count(*) from standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update standard
    <set>
      <if test="record.standardId != null">
        standard_id = #{record.standardId,jdbcType=INTEGER},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=REAL},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=INTEGER},
      </if>
      <if test="record.storey != null">
        storey = #{record.storey,jdbcType=INTEGER},
      </if>
      <if test="record.weaherHotwater != null">
        weaher_hotwater = #{record.weaherHotwater,jdbcType=BIT},
      </if>
      <if test="record.weatherWifi != null">
        weather_wifi = #{record.weatherWifi,jdbcType=BIT},
      </if>
      <if test="record.roomphotoUrl != null">
        roomphoto_url = #{record.roomphotoUrl,jdbcType=CHAR},
      </if>
      <if test="record.bed != null">
        bed = #{record.bed,jdbcType=CHAR},
      </if>
      <if test="record.roomNumber != null">
        room_number = #{record.roomNumber,jdbcType=INTEGER},
      </if>
      <if test="record.weaherCancel != null">
        weaher_cancel = #{record.weaherCancel,jdbcType=BIT},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.breakfast != null">
        breakfast = #{record.breakfast,jdbcType=INTEGER},
      </if>
      <if test="record.equipment != null">
        equipment = #{record.equipment,jdbcType=CHAR},
      </if>
      <if test="record.hotelId != null">
        hotel_id = #{record.hotelId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update standard
    set standard_id = #{record.standardId,jdbcType=INTEGER},
      area = #{record.area,jdbcType=REAL},
      room_id = #{record.roomId,jdbcType=INTEGER},
      storey = #{record.storey,jdbcType=INTEGER},
      weaher_hotwater = #{record.weaherHotwater,jdbcType=BIT},
      weather_wifi = #{record.weatherWifi,jdbcType=BIT},
      roomphoto_url = #{record.roomphotoUrl,jdbcType=CHAR},
      bed = #{record.bed,jdbcType=CHAR},
      room_number = #{record.roomNumber,jdbcType=INTEGER},
      weaher_cancel = #{record.weaherCancel,jdbcType=BIT},
      price = #{record.price,jdbcType=DECIMAL},
      breakfast = #{record.breakfast,jdbcType=INTEGER},
      equipment = #{record.equipment,jdbcType=CHAR},
      hotel_id = #{record.hotelId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.common.domain.Standard">
    update standard
    <set>
      <if test="area != null">
        area = #{area,jdbcType=REAL},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="storey != null">
        storey = #{storey,jdbcType=INTEGER},
      </if>
      <if test="weaherHotwater != null">
        weaher_hotwater = #{weaherHotwater,jdbcType=BIT},
      </if>
      <if test="weatherWifi != null">
        weather_wifi = #{weatherWifi,jdbcType=BIT},
      </if>
      <if test="roomphotoUrl != null">
        roomphoto_url = #{roomphotoUrl,jdbcType=CHAR},
      </if>
      <if test="bed != null">
        bed = #{bed,jdbcType=CHAR},
      </if>
      <if test="roomNumber != null">
        room_number = #{roomNumber,jdbcType=INTEGER},
      </if>
      <if test="weaherCancel != null">
        weaher_cancel = #{weaherCancel,jdbcType=BIT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="breakfast != null">
        breakfast = #{breakfast,jdbcType=INTEGER},
      </if>
      <if test="equipment != null">
        equipment = #{equipment,jdbcType=CHAR},
      </if>
      <if test="hotelId != null">
        hotel_id = #{hotelId,jdbcType=INTEGER},
      </if>
    </set>
    where standard_id = #{standardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.common.domain.Standard">
    update standard
    set area = #{area,jdbcType=REAL},
      room_id = #{roomId,jdbcType=INTEGER},
      storey = #{storey,jdbcType=INTEGER},
      weaher_hotwater = #{weaherHotwater,jdbcType=BIT},
      weather_wifi = #{weatherWifi,jdbcType=BIT},
      roomphoto_url = #{roomphotoUrl,jdbcType=CHAR},
      bed = #{bed,jdbcType=CHAR},
      room_number = #{roomNumber,jdbcType=INTEGER},
      weaher_cancel = #{weaherCancel,jdbcType=BIT},
      price = #{price,jdbcType=DECIMAL},
      breakfast = #{breakfast,jdbcType=INTEGER},
      equipment = #{equipment,jdbcType=CHAR},
      hotel_id = #{hotelId,jdbcType=INTEGER}
    where standard_id = #{standardId,jdbcType=INTEGER}
  </update>
</mapper>