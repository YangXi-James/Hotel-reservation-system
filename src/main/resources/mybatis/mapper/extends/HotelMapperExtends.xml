<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.HotelMapper">
    <resultMap type="com.example.springboot.common.domain.Hotel" id="DetialResultMap">
        <id column="hotel_id" jdbcType="INTEGER" property="hotelId" />
        <result column="distinct_id" jdbcType="INTEGER" property="distinctId" />
        <result column="hotel_name" jdbcType="VARCHAR" property="hotelName" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="telephone" jdbcType="VARCHAR" property="telephone" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="photo_address" jdbcType="VARCHAR" property="photoAddress" />
        <result column="grade" jdbcType="INTEGER" property="grade" />
        <result column="level" jdbcType="INTEGER" property="level" />
        <association property="distinction" javaType="com.example.springboot.common.domain.Distinction">
            <id column="distinct_id" jdbcType="INTEGER" property="distinctId" />
            <result column="city_id" jdbcType="INTEGER" property="cityId" />
            <result column="distinct_name" jdbcType="CHAR" property="distinctName" />
        </association>
        <association property="city" javaType="com.example.springboot.common.domain.City">
            <id column="city_id" jdbcType="INTEGER" property="cityId" />
            <result column="city_name" jdbcType="CHAR" property="cityName" />
            <result column="province_id" jdbcType="INTEGER" property="provinceId" />
        </association>
        <association property="country" javaType="com.example.springboot.common.domain.Country">
            <id column="country_id" jdbcType="INTEGER" property="countryId" />
            <result column="country_name" jdbcType="CHAR" property="countryName" />
        </association>
        <association property="province" javaType="com.example.springboot.common.domain.Province">
            <id column="province_id" jdbcType="INTEGER" property="provinceId" />
            <result column="country_id" jdbcType="INTEGER" property="countryId" />
            <result column="province_name" jdbcType="CHAR" property="provinceName" />
        </association>
        <collection property="standards" ofType="com.example.springboot.common.domain.Standard" javaType="ArrayList">
            <id column="standard_id" jdbcType="INTEGER" property="standardId" />
            <result column="area" jdbcType="REAL" property="area" />
            <result column="room_id" jdbcType="INTEGER" property="roomId" />
            <result column="storey" jdbcType="INTEGER" property="storey" />
            <result column="weaher_hotwater" jdbcType="BIT" property="weaherHotwater" />
            <result column="weather_wifi" jdbcType="BIT" property="weatherWifi" />
            <result column="roomphoto_url" jdbcType="CHAR" property="roomphotoUrl" />
            <result column="bed" jdbcType="CHAR" property="bed" />
            <result column="room_number" jdbcType="INTEGER" property="roomNumber" />
            <result column="weaher_cancel" jdbcType="BIT" property="weaherCancel" />
            <result column="price" jdbcType="DECIMAL" property="price" />
            <result column="breakfast" jdbcType="INTEGER" property="breakfast" />
            <result column="equipment" jdbcType="CHAR" property="equipment" />
        </collection>

    </resultMap>
    <select id="selectHotelDetialById" parameterType="java.lang.Integer" resultMap="DetialResultMap">
        select  *
        from ((((hotel natural join distinction )natural join standard)natural  join city)natural  join country)natural join province
        where  hotel_id = #{hotelId,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultType="java.lang.Integer" >
        select  count(*)
        from hotel

    </select>
</mapper>