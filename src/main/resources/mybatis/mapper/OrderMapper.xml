<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.OrderMapperLiu">
  <resultMap id="BaseResultMap" type="com.example.springboot.common.domain.Order">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="standard_id" jdbcType="INTEGER" property="standardId" />
    <result column="time" jdbcType="DATE" property="time" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="dating_time" jdbcType="INTEGER" property="datingTime" />
    <result column="wheather_pay" jdbcType="BIT" property="wheatherPay" />
    <result column="order_time" jdbcType="TIME" property="orderTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, id, standard_id, time, total_price, dating_time, wheather_pay, order_time
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot.common.domain.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from theorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from theorder
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from theorder
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.common.domain.OrderExample">
    delete from theorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.common.domain.Order">
    insert into theorder (order_id, id, standard_id, 
      time, total_price, dating_time, 
      wheather_pay, order_time)
    values (#{orderId,jdbcType=INTEGER}, #{id,jdbcType=INTEGER}, #{standardId,jdbcType=INTEGER}, 
      #{time,jdbcType=DATE}, #{totalPrice,jdbcType=DECIMAL}, #{datingTime,jdbcType=INTEGER}, 
      #{wheatherPay,jdbcType=BIT}, #{orderTime,jdbcType=TIME})
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.common.domain.Order">
    insert into theorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="standardId != null">
        standard_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="datingTime != null">
        dating_time,
      </if>
      <if test="wheatherPay != null">
        wheather_pay,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="standardId != null">
        #{standardId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="datingTime != null">
        #{datingTime,jdbcType=INTEGER},
      </if>
      <if test="wheatherPay != null">
        #{wheatherPay,jdbcType=BIT},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIME},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.common.domain.OrderExample" resultType="java.lang.Long">
    select count(*) from theorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update theorder
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.standardId != null">
        standard_id = #{record.standardId,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.datingTime != null">
        dating_time = #{record.datingTime,jdbcType=INTEGER},
      </if>
      <if test="record.wheatherPay != null">
        wheather_pay = #{record.wheatherPay,jdbcType=BIT},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIME},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update theorder
    set order_id = #{record.orderId,jdbcType=INTEGER},
      id = #{record.id,jdbcType=INTEGER},
      standard_id = #{record.standardId,jdbcType=INTEGER},
      time = #{record.time,jdbcType=DATE},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      dating_time = #{record.datingTime,jdbcType=INTEGER},
      wheather_pay = #{record.wheatherPay,jdbcType=BIT},
      order_time = #{record.orderTime,jdbcType=TIME}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.common.domain.Order">
    update theorder
    <set>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="standardId != null">
        standard_id = #{standardId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=DATE},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="datingTime != null">
        dating_time = #{datingTime,jdbcType=INTEGER},
      </if>
      <if test="wheatherPay != null">
        wheather_pay = #{wheatherPay,jdbcType=BIT},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIME},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.common.domain.Order">
    update theorder
    set id = #{id,jdbcType=INTEGER},
      standard_id = #{standardId,jdbcType=INTEGER},
      time = #{time,jdbcType=DATE},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      dating_time = #{datingTime,jdbcType=INTEGER},
      wheather_pay = #{wheatherPay,jdbcType=BIT},
      order_time = #{orderTime,jdbcType=TIME}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>